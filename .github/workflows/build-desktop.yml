name: build-desktop
on:
  push:
    paths:
    - "core/**"
    - "desktop/**"
    - ".github/workflows/build-desktop.yml"
jobs:
  build-desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Setup NPM cache
      uses: c-hive/gha-npm-cache@v1
    - name: Install root node modules
      run: npm i
    - name: Install and link package node modules 
      run: npm run bootstrap
    - name: Build core
      run: npm run build
      working-directory: core
    - name: Build desktop
      run: npm run build:all
      working-directory: desktop
    - name: Create macOS package
      run: npm run package:mac
      if: runner.os == 'macOS'
      env:
        CSC_LINK: ${{ secrets.MAC_CERT }}
        CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_PW }}
        MAC_NOTARIZE: ${{ contains(github.event.head_commit.message, '[notarize]') && 'true' || 'false' }}
        MAC_NOTARIZE_AID: ${{ secrets.MAC_NOTARIZE_AID }}
        MAC_NOTARIZE_PW: ${{ secrets.MAC_NOTARIZE_PW }}
        MAC_NOTARIZE_TID: ${{ secrets.MAC_NOTARIZE_TID }}
      working-directory: desktop
    - name: Create Windows package
      run: npm run package:win
      if: runner.os == 'Windows'
      env:
        CSC_LINK: ${{ secrets.WIN_CERT }}
        CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PW }}
      working-directory: desktop
    - name: Create Linux package
      run: npm run package:lnx
      if: runner.os == 'Linux'
      working-directory: desktop
